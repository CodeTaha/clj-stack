;; Analyzed by ClojureScript 0.0-2755
{:defs {t6857 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name clj-stack.core/t6857, :file "src/cljs/clj_stack/core.cljs", :type true, :anonymous true, :column 3, :line 73, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t6798 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :name clj-stack.core/t6798, :file "src/cljs/clj_stack/core.cljs", :type true, :anonymous true, :column 3, :line 44, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app-view {:protocol-inline nil, :name clj-stack.core/app-view, :variadic false, :file "src/cljs/clj_stack/core.cljs", :end-column 16, :method-params ([model owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-stack.core/t6860, :variadic false, :max-fixed-arity 2}), :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([model owner])), :test true}, ->t6798 {:protocol-inline nil, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :name clj-stack.core/->t6798, :variadic false, :file "src/cljs/clj_stack/core.cljs", :method-params ([owner video video-view meta6799]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag clj-stack.core/t6798, :variadic false, :max-fixed-arity 4}), :line 44, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner video video-view meta6799])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t6793 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :name clj-stack.core/t6793, :file "src/cljs/clj_stack/core.cljs", :type true, :anonymous true, :column 3, :line 44, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t6857 {:protocol-inline nil, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name clj-stack.core/->t6857, :variadic false, :file "src/cljs/clj_stack/core.cljs", :method-params ([owner model app-view meta6858]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag clj-stack.core/t6857, :variadic false, :max-fixed-arity 4}), :line 73, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner model app-view meta6858])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, ->t6828 {:protocol-inline nil, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name clj-stack.core/->t6828, :variadic false, :file "src/cljs/clj_stack/core.cljs", :method-params ([owner videos videos-view meta6829]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag clj-stack.core/t6828, :variadic false, :max-fixed-arity 4}), :line 55, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner videos videos-view meta6829])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, ->t6793 {:protocol-inline nil, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :name clj-stack.core/->t6793, :variadic false, :file "src/cljs/clj_stack/core.cljs", :method-params ([owner video video-view meta6794]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag clj-stack.core/t6793, :variadic false, :max-fixed-arity 4}), :line 44, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner video video-view meta6794])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t6803 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name clj-stack.core/t6803, :file "src/cljs/clj_stack/core.cljs", :type true, :anonymous true, :column 3, :line 55, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, video-view {:protocol-inline nil, :name clj-stack.core/video-view, :variadic false, :file "src/cljs/clj_stack/core.cljs", :end-column 18, :method-params ([video owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-stack.core/t6798, :variadic false, :max-fixed-arity 2}), :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists (quote ([video owner])), :test true}, new-video-view {:protocol-inline nil, :name clj-stack.core/new-video-view, :variadic false, :file "src/cljs/clj_stack/core.cljs", :end-column 22, :method-params ([videos owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-stack.core/t6790, :variadic false, :max-fixed-arity 2}), :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([videos owner])), :test true}, t6828 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name clj-stack.core/t6828, :file "src/cljs/clj_stack/core.cljs", :type true, :anonymous true, :column 3, :line 55, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, delete-video {:protocol-inline nil, :name clj-stack.core/delete-video, :variadic false, :file "src/cljs/clj_stack/core.cljs", :end-column 20, :method-params ([videos del-video]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([videos del-video])), :test true}, add-video {:protocol-inline nil, :name clj-stack.core/add-video, :variadic false, :file "src/cljs/clj_stack/core.cljs", :end-column 17, :method-params ([videos owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([videos owner])), :test true}, t6860 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name clj-stack.core/t6860, :file "src/cljs/clj_stack/core.cljs", :type true, :anonymous true, :column 3, :line 73, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t6790 {:protocol-inline nil, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name clj-stack.core/->t6790, :variadic false, :file "src/cljs/clj_stack/core.cljs", :method-params ([owner videos new-video-view meta6791]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag clj-stack.core/t6790, :variadic false, :max-fixed-arity 4}), :line 29, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner videos new-video-view meta6791])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, ->t6860 {:protocol-inline nil, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name clj-stack.core/->t6860, :variadic false, :file "src/cljs/clj_stack/core.cljs", :method-params ([owner model app-view meta6861]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag clj-stack.core/t6860, :variadic false, :max-fixed-arity 4}), :line 73, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner model app-view meta6861])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, ->t6803 {:protocol-inline nil, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name clj-stack.core/->t6803, :variadic false, :file "src/cljs/clj_stack/core.cljs", :method-params ([owner videos videos-view meta6804]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag clj-stack.core/t6803, :variadic false, :max-fixed-arity 4}), :line 55, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner videos videos-view meta6804])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, app-model {:file "src/cljs/clj_stack/core.cljs", :line 10, :column 1, :end-line 10, :end-column 16, :test true, :name clj-stack.core/app-model}, videos-view {:protocol-inline nil, :name clj-stack.core/videos-view, :variadic false, :file "src/cljs/clj_stack/core.cljs", :end-column 19, :method-params ([videos owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-stack.core/t6828, :variadic false, :max-fixed-arity 2}), :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([videos owner])), :test true}, t6790 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name clj-stack.core/t6790, :file "src/cljs/clj_stack/core.cljs", :type true, :anonymous true, :column 3, :line 29, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t6787 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name clj-stack.core/t6787, :file "src/cljs/clj_stack/core.cljs", :type true, :anonymous true, :column 3, :line 29, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t6787 {:protocol-inline nil, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name clj-stack.core/->t6787, :variadic false, :file "src/cljs/clj_stack/core.cljs", :method-params ([owner videos new-video-view meta6788]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag clj-stack.core/t6787, :variadic false, :max-fixed-arity 4}), :line 29, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner videos new-video-view meta6788])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}}, :name clj-stack.core, :doc nil, :excludes #{}, :use-macros {go cljs.core.async.macros}, :require-macros {dom om.dom, om.dom om.dom, om om.core, om.core om.core, cljs.core.async.macros cljs.core.async.macros}, :uses {<! cljs.core.async, chan cljs.core.async, edn-xhr om-sync.util, put! cljs.core.async}, :requires {om-sync.util om-sync.util, cljs.core.async cljs.core.async, dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :imports nil}