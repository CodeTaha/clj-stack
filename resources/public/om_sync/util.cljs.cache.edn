;; Analyzed by ClojureScript 0.0-2755
{:defs {edn-xhr {:protocol-inline nil, :name om-sync.util/edn-xhr, :variadic false, :file "resources/public/om_sync/util.cljs", :end-column 15, :method-params ([p__9891]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [method url data on-complete on-error]}])), :test true}, meths {:file "resources/public/om_sync/util.cljs", :line 28, :column 1, :end-line 28, :end-column 22, :private true, :test true, :name om-sync.util/meths}, error? {:protocol-inline nil, :name om-sync.util/error?, :variadic false, :file "resources/public/om_sync/util.cljs", :end-column 14, :method-params ([res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 1}), :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([res])), :test true}, subpath? {:protocol-inline nil, :name om-sync.util/subpath?, :variadic false, :file "resources/public/om_sync/util.cljs", :end-column 16, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 2}), :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b])), :test true}, tx-tag {:protocol-inline nil, :name om-sync.util/tx-tag, :variadic false, :file "resources/public/om_sync/util.cljs", :end-column 14, :method-params ([p__9888]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [tag], :as tx-data}])), :test true}, sub {:protocol-inline nil, :name om-sync.util/sub, :variadic false, :file "resources/public/om_sync/util.cljs", :end-column 11, :method-params ([p0 p1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{clj any}, :variadic false, :max-fixed-arity 2}), :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p0 p1])), :test true}, popn {:protocol-inline nil, :name om-sync.util/popn, :variadic false, :file "resources/public/om_sync/util.cljs", :end-column 12, :method-params ([n v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 2}), :line 8, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n v])), :test true}}, :name om-sync.util, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {EventType goog.events.EventType, XhrIo goog.net.XhrIo, events goog.events, goog.events goog.events, cljs.reader cljs.reader, reader cljs.reader}, :imports {EventType goog.events.EventType, XhrIo goog.net.XhrIo}}